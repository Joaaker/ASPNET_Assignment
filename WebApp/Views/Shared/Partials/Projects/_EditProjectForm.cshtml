@model EditProjectViewModel
@{
	var statusesResult = await statusService.GetAllStatusesAsync();
	var statuses = statusesResult.Data;

	var clientResult = await clientService.GetAllClientsAsync();
	var clients = clientResult.Data;
}

<div id="edit-project-modal" class="_modal edit-modal-with-img">
	<div class="_modal-content">
		<div class="_modal-header">
			<h3>Edit Project</h3>
			<button class="_btn-close" type="button" data-close="true"></button>
		</div>

		<form novalidate asp-action="Edit" method="post" asp-controller="Projects" class="modal-form">

            <input type="hidden" asp-for="Id" id="edit-project-id" />

            <div class="image-previewer circle">
                <img src="" class="image-preview" />
                <input asp-for="ProjectImage" accept="image/*" class="hide" />
            </div>

            <div class="mb-3">
                <label class="form-label">Members</label>
                <div class="field-group">
                    <input type="hidden" asp-for="MembersIds" id="Edit_MembersIds" />
                    <div id="tagged-users-edit" class="form-input form-tag-select">
                        <input type="text"
                               id="member-search-edit"
                               class="form-control form-tag-input"
                               placeholder="Add member..."
                               autocomplete="off" />
                        <div id="member-search-results-edit" class="search-results"></div>
                    </div>
                    <span asp-validation-for="MembersIds"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="Title" class="form-label"></label>
                <div class="field-group">
                    <input asp-for="Title" class="form-control text-input">
                    <span asp-validation-for="Title"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="ClientId" class="form-label"></label>
                <div class="field-group">
                    <select asp-for="ClientId" class="form-control">
                        <option selected disabled hidden>---- Select a client ----</option>
                        @foreach (var client in clients ?? [])
                        {
                            <option value="@client.Id">@client.ClientName</option>
                        }
                    </select>
                    <span asp-validation-for="ClientId"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="Description" class="form-label"></label>
                <div class="field-group">
                    <input asp-for="Description" class="form-control text-input">
                    <span asp-validation-for="Description"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="StartDate" class="form-label"></label>
                <div class="field-group">
                    <input asp-for="StartDate" class="form-control date-input start-date" type="date">
                    <span asp-validation-for="StartDate"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="EndDate" class="form-label"></label>
                <div class="field-group">
                    <input asp-for="EndDate" class="form-control date-input end-date" type="date">
                    <span asp-validation-for="EndDate"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="StatusId" class="form-label"></label>
                <div class="field-group">
                    <select asp-for="StatusId" class="form-control">
                        <option selected disabled hidden>---- Select a status ----</option>
                        @foreach (var status in statuses ?? [])
                        {
                            <option value="@status.Id">@status.StatusName</option>
                        }
                    </select>
                    <span asp-validation-for="StatusId"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="Budget" class="form-label"></label>
                <div class="field-group">
                    <input asp-for="Budget" class="form-control text-input">
                    <span asp-validation-for="Budget"></span>
                </div>
            </div>

            <button class="btn-base btn-blue btn-submit" type="submit">Save</button>

		</form>
	</div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var pre = @Html.Raw(JsonSerializer.Serialize(Model.MembersIds ?? []));
        var presel = pre.map(function(id) {
            return { id: id, fullName: '', imageUri: '' }; 
        });

        initTagSelector({
            containerId: 'tagged-users-edit',
            inputId: 'member-search-edit',
            resultsId: 'member-search-results-edit',
            selectedInputIds: 'Edit_MembersIds',
            searchUrl: function (query) {
                return '@Url.Action("Search", "Members")' + '?term=' + encodeURIComponent(query);
            },
            displayProperty: 'fullName',
            imageProperty: 'imageUri',
            tagClass: 'tag',
            emptyMessage: 'No users found.',
            preselected: presel
        });
    });

    document.querySelectorAll('.edit-project-btn').forEach(button => {
        button.addEventListener('click', async function (e) {
            var projectId = button.getAttribute('data-project-id');
            var res = await fetch('/Projects/GetProjectForEdit?id=' + projectId);
            var data = await res.json();
            var members = data.project.projectMembers;

            members.forEach(m => {
                var item = {
                    id: m.id,
                    fullName: m.firstName + ' ' + m.lastName,
                    imageUri: m.imageUri
                };
                initTagSelector().addTag(item);
            });
        });
    });
</script>