
@* VID notis >>> class = notification-active PÅ Button*@
<div class="notification-dropdown-container">

    <button id="notification-dropdown-button" class="notification-bell" data-type="dropdown-btn" data-target="#notification-dropdown">
		<i class="fa-solid fa-bell bell">
			<i class="fa-solid fa-circle notification-circle"></i>
		</i>
	</button>

    <div id="notification-dropdown" class="notification-dropdown">
        <div class="notification-header">
            <h4>Notifications</h4>
            <span class="notification-number">0</span>
        </div>
        <div class="dropdown-divider"></div>
        <div class="notifications">

            <div class="notification-item" data-id="">
                <img class="image" src="~/images/tinyAvatar.svg" />
                <div class="message">Hans was here.</div>
                <div class="time">1 day ago</div>
                <button class="btn-close" onclick="dismissNotification()"></button>
            </div>

        </div>
    </div>

</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")
        .build()

    connection.on("ReceiveNotification", function(notification) {
        const notifications = document.querySelector('.notifications')

        const item = document.createElement('div')
        item.className = 'notification-item'
        item.setAttribute('data-id', notification.id)
        item.innerHTML =
        `
        <img class="image" src="${notification.icon}" />
        <div class="message">${notification.message}</div>
        <div class="time" data-created="${new Date(notification.created).toISOString()}">${notification.created}</div>
        <button class="btn-close" onclick="dismissNotification('${notification.id}')"></button>
        `

        notifications.insertBefore(item, notifications.firstChild)

        updateRelativeTimes()
        updateNotificationCount()
    })

    connection.on("NotificationDismissed", function(notificationId) {
        removeNotification(notificationId)
    })

    connection.start().catch(error => console.error(error))

    async function dismissNotification(notificationId) {
        try {
            const res = await fetch(`/api/notifications/dismiss/${notificationId}`, { method : 'POST' })
            if (res.ok) {
                removeNotification(notificationId)
            }
            else {
                console.error('Error removing notification')
            }
        }
        catch (error) {
            console.error('Error removing notification: ', error)
        }
    }

    function removeNotification(notificationId) {
        const element = document.querySelector(`.notification-item[data-id="${notificationId}"]`)
        if (element) {
            element.remove()
            updateNotificationCount()
        }
    }

    function updateNotificationCount() {
        const notifications = document.querySelector('.notifications')
        const notificationNumber = document.querySelector('.notification-number')
        const notificationDropdownButton = document.querySelector('#notification-dropdown-button')
        const count = notifications.querySelectorAll('.notification-item').length

        if (notificationNumber) {
            notificationNumber.textContent = count
        }

        // Ändra till Att lägga till klassen "active" på "notificationDropdownButton"
        let dot = notificationDropdownButton.querySelector('.dot.dot-red')
        if (count > 0 && !dot) {
            dot = document.createElement('div')
            dot.className = 'dot dot-red'
            notificationDropdownButton.appendChild(dot)
        }

        // Hans verison i videon
         
        // let dot = notificationDropdownButton.querySelector('.dot.dot-red')
        // if (count > 0 && !dot) {
        //     dot = document.createElement('div')
        //     dot.className = 'dot dot-red'
        //     notificationDropdownButton.appendChild(dot)
        // }

        if (count === 0 && dot) {
            dot.remove()
        }
    }


</script>
  